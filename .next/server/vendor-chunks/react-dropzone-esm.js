"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-dropzone-esm";
exports.ids = ["vendor-chunks/react-dropzone-esm"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-dropzone-esm/dist/esm/attr-accept.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/react-dropzone-esm/dist/esm/attr-accept.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ accepts)\n/* harmony export */ });\nfunction accepts(file, acceptedFiles) {\n  if (file && acceptedFiles) {\n    const acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(\",\");\n    const fileName = file.name || \"\";\n    const mimeType = (file.type || \"\").toLowerCase();\n    const baseMimeType = mimeType.replace(/\\/.*$/, \"\");\n    return acceptedFilesArray.some((type) => {\n      const validType = type.trim().toLowerCase();\n      if (validType.charAt(0) === \".\") {\n        return fileName.toLowerCase().endsWith(validType);\n      } else if (validType.endsWith(\"/*\")) {\n        return baseMimeType === validType.replace(/\\/.*$/, \"\");\n      }\n      return mimeType === validType;\n    });\n  }\n  return true;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVhY3QtZHJvcHpvbmUtZXNtL2Rpc3QvZXNtL2F0dHItYWNjZXB0Lm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFOEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYW50aW5lLW1pbmltYWwtbmV4dC10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9yZWFjdC1kcm9wem9uZS1lc20vZGlzdC9lc20vYXR0ci1hY2NlcHQubWpzP2U4ZjkiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gYWNjZXB0cyhmaWxlLCBhY2NlcHRlZEZpbGVzKSB7XG4gIGlmIChmaWxlICYmIGFjY2VwdGVkRmlsZXMpIHtcbiAgICBjb25zdCBhY2NlcHRlZEZpbGVzQXJyYXkgPSBBcnJheS5pc0FycmF5KGFjY2VwdGVkRmlsZXMpID8gYWNjZXB0ZWRGaWxlcyA6IGFjY2VwdGVkRmlsZXMuc3BsaXQoXCIsXCIpO1xuICAgIGNvbnN0IGZpbGVOYW1lID0gZmlsZS5uYW1lIHx8IFwiXCI7XG4gICAgY29uc3QgbWltZVR5cGUgPSAoZmlsZS50eXBlIHx8IFwiXCIpLnRvTG93ZXJDYXNlKCk7XG4gICAgY29uc3QgYmFzZU1pbWVUeXBlID0gbWltZVR5cGUucmVwbGFjZSgvXFwvLiokLywgXCJcIik7XG4gICAgcmV0dXJuIGFjY2VwdGVkRmlsZXNBcnJheS5zb21lKCh0eXBlKSA9PiB7XG4gICAgICBjb25zdCB2YWxpZFR5cGUgPSB0eXBlLnRyaW0oKS50b0xvd2VyQ2FzZSgpO1xuICAgICAgaWYgKHZhbGlkVHlwZS5jaGFyQXQoMCkgPT09IFwiLlwiKSB7XG4gICAgICAgIHJldHVybiBmaWxlTmFtZS50b0xvd2VyQ2FzZSgpLmVuZHNXaXRoKHZhbGlkVHlwZSk7XG4gICAgICB9IGVsc2UgaWYgKHZhbGlkVHlwZS5lbmRzV2l0aChcIi8qXCIpKSB7XG4gICAgICAgIHJldHVybiBiYXNlTWltZVR5cGUgPT09IHZhbGlkVHlwZS5yZXBsYWNlKC9cXC8uKiQvLCBcIlwiKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBtaW1lVHlwZSA9PT0gdmFsaWRUeXBlO1xuICAgIH0pO1xuICB9XG4gIHJldHVybiB0cnVlO1xufVxuXG5leHBvcnQgeyBhY2NlcHRzIGFzIGRlZmF1bHQgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-dropzone-esm/dist/esm/attr-accept.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-dropzone-esm/dist/esm/file-selector.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/react-dropzone-esm/dist/esm/file-selector.mjs ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromEvent: () => (/* binding */ fromEvent)\n/* harmony export */ });\n/* harmony import */ var _file_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./file.mjs */ \"(ssr)/./node_modules/react-dropzone-esm/dist/esm/file.mjs\");\n\n\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\nconst FILES_TO_IGNORE = [\n  // Thumbnail cache files for macOS and Windows\n  \".DS_Store\",\n  // macOs\n  \"Thumbs.db\"\n  // Windows\n];\nfunction fromEvent(evt) {\n  return __async(this, null, function* () {\n    if (isObject(evt) && isDataTransfer(evt.dataTransfer)) {\n      return getDataTransferFiles(evt.dataTransfer, evt.type);\n    } else if (isChangeEvt(evt)) {\n      return getInputFiles(evt);\n    } else if (Array.isArray(evt) && evt.every((item) => \"getFile\" in item && typeof item.getFile === \"function\")) {\n      return getFsHandleFiles(evt);\n    }\n    return [];\n  });\n}\nfunction isDataTransfer(value) {\n  return isObject(value);\n}\nfunction isChangeEvt(value) {\n  return isObject(value) && isObject(value.target);\n}\nfunction isObject(v) {\n  return typeof v === \"object\" && v !== null;\n}\nfunction getInputFiles(evt) {\n  return fromList(evt.target.files).map((file) => (0,_file_mjs__WEBPACK_IMPORTED_MODULE_0__.toFileWithPath)(file));\n}\nfunction getFsHandleFiles(handles) {\n  return __async(this, null, function* () {\n    const files = yield Promise.all(handles.map((h) => h.getFile()));\n    return files.map((file) => (0,_file_mjs__WEBPACK_IMPORTED_MODULE_0__.toFileWithPath)(file));\n  });\n}\nfunction getDataTransferFiles(dt, type) {\n  return __async(this, null, function* () {\n    if (dt.items) {\n      const items = fromList(dt.items).filter((item) => item.kind === \"file\");\n      if (type !== \"drop\") {\n        return items;\n      }\n      const files = yield Promise.all(items.map(toFilePromises));\n      return noIgnoredFiles(flatten(files));\n    }\n    return noIgnoredFiles(fromList(dt.files).map((file) => (0,_file_mjs__WEBPACK_IMPORTED_MODULE_0__.toFileWithPath)(file)));\n  });\n}\nfunction noIgnoredFiles(files) {\n  return files.filter((file) => FILES_TO_IGNORE.indexOf(file.name) === -1);\n}\nfunction fromList(items) {\n  if (items === null) {\n    return [];\n  }\n  const files = [];\n  for (let i = 0; i < items.length; i++) {\n    const file = items[i];\n    files.push(file);\n  }\n  return files;\n}\nfunction toFilePromises(item) {\n  if (typeof item.webkitGetAsEntry !== \"function\") {\n    return fromDataTransferItem(item);\n  }\n  const entry = item.webkitGetAsEntry();\n  if (entry && entry.isDirectory) {\n    return fromDirEntry(entry);\n  }\n  return fromDataTransferItem(item);\n}\nfunction flatten(items) {\n  return items.reduce(\n    (acc, files) => [\n      ...acc,\n      ...Array.isArray(files) ? flatten(files) : [files]\n    ],\n    []\n  );\n}\nfunction fromDataTransferItem(item) {\n  const file = item.getAsFile();\n  if (!file) {\n    return Promise.reject(`${item} is not a File`);\n  }\n  const fwp = (0,_file_mjs__WEBPACK_IMPORTED_MODULE_0__.toFileWithPath)(file);\n  return Promise.resolve(fwp);\n}\nfunction fromEntry(entry) {\n  return __async(this, null, function* () {\n    return entry.isDirectory ? fromDirEntry(entry) : fromFileEntry(entry);\n  });\n}\nfunction fromDirEntry(entry) {\n  const reader = entry.createReader();\n  return new Promise((resolve, reject) => {\n    const entries = [];\n    function readEntries() {\n      reader.readEntries(\n        (batch) => __async(this, null, function* () {\n          if (!batch.length) {\n            try {\n              const files = yield Promise.all(entries);\n              resolve(files);\n            } catch (err) {\n              reject(err);\n            }\n          } else {\n            const items = Promise.all(batch.map(fromEntry));\n            entries.push(items);\n            readEntries();\n          }\n        }),\n        (err) => {\n          reject(err);\n        }\n      );\n    }\n    readEntries();\n  });\n}\nfunction fromFileEntry(entry) {\n  return __async(this, null, function* () {\n    return new Promise((resolve, reject) => {\n      entry.file(\n        (file) => {\n          const fwp = (0,_file_mjs__WEBPACK_IMPORTED_MODULE_0__.toFileWithPath)(file, entry.fullPath);\n          resolve(fwp);\n        },\n        (err) => {\n          reject(err);\n        }\n      );\n    });\n  });\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVhY3QtZHJvcHpvbmUtZXNtL2Rpc3QvZXNtL2ZpbGUtc2VsZWN0b3IubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTRDOztBQUU1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCx5REFBYztBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQix5REFBYztBQUM3QyxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRCx5REFBYztBQUN6RSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGtCQUFrQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsTUFBTTtBQUNuQztBQUNBLGNBQWMseURBQWM7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHlEQUFjO0FBQ3BDO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDs7QUFFcUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYW50aW5lLW1pbmltYWwtbmV4dC10ZW1wbGF0ZS8uL25vZGVfbW9kdWxlcy9yZWFjdC1kcm9wem9uZS1lc20vZGlzdC9lc20vZmlsZS1zZWxlY3Rvci5tanM/MTkzNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0b0ZpbGVXaXRoUGF0aCB9IGZyb20gJy4vZmlsZS5tanMnO1xuXG52YXIgX19hc3luYyA9IChfX3RoaXMsIF9fYXJndW1lbnRzLCBnZW5lcmF0b3IpID0+IHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICB2YXIgZnVsZmlsbGVkID0gKHZhbHVlKSA9PiB7XG4gICAgICB0cnkge1xuICAgICAgICBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIHJlamVjdChlKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIHZhciByZWplY3RlZCA9ICh2YWx1ZSkgPT4ge1xuICAgICAgdHJ5IHtcbiAgICAgICAgc3RlcChnZW5lcmF0b3IudGhyb3codmFsdWUpKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgcmVqZWN0KGUpO1xuICAgICAgfVxuICAgIH07XG4gICAgdmFyIHN0ZXAgPSAoeCkgPT4geC5kb25lID8gcmVzb2x2ZSh4LnZhbHVlKSA6IFByb21pc2UucmVzb2x2ZSh4LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpO1xuICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseShfX3RoaXMsIF9fYXJndW1lbnRzKSkubmV4dCgpKTtcbiAgfSk7XG59O1xuY29uc3QgRklMRVNfVE9fSUdOT1JFID0gW1xuICAvLyBUaHVtYm5haWwgY2FjaGUgZmlsZXMgZm9yIG1hY09TIGFuZCBXaW5kb3dzXG4gIFwiLkRTX1N0b3JlXCIsXG4gIC8vIG1hY09zXG4gIFwiVGh1bWJzLmRiXCJcbiAgLy8gV2luZG93c1xuXTtcbmZ1bmN0aW9uIGZyb21FdmVudChldnQpIHtcbiAgcmV0dXJuIF9fYXN5bmModGhpcywgbnVsbCwgZnVuY3Rpb24qICgpIHtcbiAgICBpZiAoaXNPYmplY3QoZXZ0KSAmJiBpc0RhdGFUcmFuc2ZlcihldnQuZGF0YVRyYW5zZmVyKSkge1xuICAgICAgcmV0dXJuIGdldERhdGFUcmFuc2ZlckZpbGVzKGV2dC5kYXRhVHJhbnNmZXIsIGV2dC50eXBlKTtcbiAgICB9IGVsc2UgaWYgKGlzQ2hhbmdlRXZ0KGV2dCkpIHtcbiAgICAgIHJldHVybiBnZXRJbnB1dEZpbGVzKGV2dCk7XG4gICAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KGV2dCkgJiYgZXZ0LmV2ZXJ5KChpdGVtKSA9PiBcImdldEZpbGVcIiBpbiBpdGVtICYmIHR5cGVvZiBpdGVtLmdldEZpbGUgPT09IFwiZnVuY3Rpb25cIikpIHtcbiAgICAgIHJldHVybiBnZXRGc0hhbmRsZUZpbGVzKGV2dCk7XG4gICAgfVxuICAgIHJldHVybiBbXTtcbiAgfSk7XG59XG5mdW5jdGlvbiBpc0RhdGFUcmFuc2Zlcih2YWx1ZSkge1xuICByZXR1cm4gaXNPYmplY3QodmFsdWUpO1xufVxuZnVuY3Rpb24gaXNDaGFuZ2VFdnQodmFsdWUpIHtcbiAgcmV0dXJuIGlzT2JqZWN0KHZhbHVlKSAmJiBpc09iamVjdCh2YWx1ZS50YXJnZXQpO1xufVxuZnVuY3Rpb24gaXNPYmplY3Qodikge1xuICByZXR1cm4gdHlwZW9mIHYgPT09IFwib2JqZWN0XCIgJiYgdiAhPT0gbnVsbDtcbn1cbmZ1bmN0aW9uIGdldElucHV0RmlsZXMoZXZ0KSB7XG4gIHJldHVybiBmcm9tTGlzdChldnQudGFyZ2V0LmZpbGVzKS5tYXAoKGZpbGUpID0+IHRvRmlsZVdpdGhQYXRoKGZpbGUpKTtcbn1cbmZ1bmN0aW9uIGdldEZzSGFuZGxlRmlsZXMoaGFuZGxlcykge1xuICByZXR1cm4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgIGNvbnN0IGZpbGVzID0geWllbGQgUHJvbWlzZS5hbGwoaGFuZGxlcy5tYXAoKGgpID0+IGguZ2V0RmlsZSgpKSk7XG4gICAgcmV0dXJuIGZpbGVzLm1hcCgoZmlsZSkgPT4gdG9GaWxlV2l0aFBhdGgoZmlsZSkpO1xuICB9KTtcbn1cbmZ1bmN0aW9uIGdldERhdGFUcmFuc2ZlckZpbGVzKGR0LCB0eXBlKSB7XG4gIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgaWYgKGR0Lml0ZW1zKSB7XG4gICAgICBjb25zdCBpdGVtcyA9IGZyb21MaXN0KGR0Lml0ZW1zKS5maWx0ZXIoKGl0ZW0pID0+IGl0ZW0ua2luZCA9PT0gXCJmaWxlXCIpO1xuICAgICAgaWYgKHR5cGUgIT09IFwiZHJvcFwiKSB7XG4gICAgICAgIHJldHVybiBpdGVtcztcbiAgICAgIH1cbiAgICAgIGNvbnN0IGZpbGVzID0geWllbGQgUHJvbWlzZS5hbGwoaXRlbXMubWFwKHRvRmlsZVByb21pc2VzKSk7XG4gICAgICByZXR1cm4gbm9JZ25vcmVkRmlsZXMoZmxhdHRlbihmaWxlcykpO1xuICAgIH1cbiAgICByZXR1cm4gbm9JZ25vcmVkRmlsZXMoZnJvbUxpc3QoZHQuZmlsZXMpLm1hcCgoZmlsZSkgPT4gdG9GaWxlV2l0aFBhdGgoZmlsZSkpKTtcbiAgfSk7XG59XG5mdW5jdGlvbiBub0lnbm9yZWRGaWxlcyhmaWxlcykge1xuICByZXR1cm4gZmlsZXMuZmlsdGVyKChmaWxlKSA9PiBGSUxFU19UT19JR05PUkUuaW5kZXhPZihmaWxlLm5hbWUpID09PSAtMSk7XG59XG5mdW5jdGlvbiBmcm9tTGlzdChpdGVtcykge1xuICBpZiAoaXRlbXMgPT09IG51bGwpIHtcbiAgICByZXR1cm4gW107XG4gIH1cbiAgY29uc3QgZmlsZXMgPSBbXTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBpdGVtcy5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IGZpbGUgPSBpdGVtc1tpXTtcbiAgICBmaWxlcy5wdXNoKGZpbGUpO1xuICB9XG4gIHJldHVybiBmaWxlcztcbn1cbmZ1bmN0aW9uIHRvRmlsZVByb21pc2VzKGl0ZW0pIHtcbiAgaWYgKHR5cGVvZiBpdGVtLndlYmtpdEdldEFzRW50cnkgIT09IFwiZnVuY3Rpb25cIikge1xuICAgIHJldHVybiBmcm9tRGF0YVRyYW5zZmVySXRlbShpdGVtKTtcbiAgfVxuICBjb25zdCBlbnRyeSA9IGl0ZW0ud2Via2l0R2V0QXNFbnRyeSgpO1xuICBpZiAoZW50cnkgJiYgZW50cnkuaXNEaXJlY3RvcnkpIHtcbiAgICByZXR1cm4gZnJvbURpckVudHJ5KGVudHJ5KTtcbiAgfVxuICByZXR1cm4gZnJvbURhdGFUcmFuc2Zlckl0ZW0oaXRlbSk7XG59XG5mdW5jdGlvbiBmbGF0dGVuKGl0ZW1zKSB7XG4gIHJldHVybiBpdGVtcy5yZWR1Y2UoXG4gICAgKGFjYywgZmlsZXMpID0+IFtcbiAgICAgIC4uLmFjYyxcbiAgICAgIC4uLkFycmF5LmlzQXJyYXkoZmlsZXMpID8gZmxhdHRlbihmaWxlcykgOiBbZmlsZXNdXG4gICAgXSxcbiAgICBbXVxuICApO1xufVxuZnVuY3Rpb24gZnJvbURhdGFUcmFuc2Zlckl0ZW0oaXRlbSkge1xuICBjb25zdCBmaWxlID0gaXRlbS5nZXRBc0ZpbGUoKTtcbiAgaWYgKCFmaWxlKSB7XG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGAke2l0ZW19IGlzIG5vdCBhIEZpbGVgKTtcbiAgfVxuICBjb25zdCBmd3AgPSB0b0ZpbGVXaXRoUGF0aChmaWxlKTtcbiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShmd3ApO1xufVxuZnVuY3Rpb24gZnJvbUVudHJ5KGVudHJ5KSB7XG4gIHJldHVybiBfX2FzeW5jKHRoaXMsIG51bGwsIGZ1bmN0aW9uKiAoKSB7XG4gICAgcmV0dXJuIGVudHJ5LmlzRGlyZWN0b3J5ID8gZnJvbURpckVudHJ5KGVudHJ5KSA6IGZyb21GaWxlRW50cnkoZW50cnkpO1xuICB9KTtcbn1cbmZ1bmN0aW9uIGZyb21EaXJFbnRyeShlbnRyeSkge1xuICBjb25zdCByZWFkZXIgPSBlbnRyeS5jcmVhdGVSZWFkZXIoKTtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICBjb25zdCBlbnRyaWVzID0gW107XG4gICAgZnVuY3Rpb24gcmVhZEVudHJpZXMoKSB7XG4gICAgICByZWFkZXIucmVhZEVudHJpZXMoXG4gICAgICAgIChiYXRjaCkgPT4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgIGlmICghYmF0Y2gubGVuZ3RoKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICBjb25zdCBmaWxlcyA9IHlpZWxkIFByb21pc2UuYWxsKGVudHJpZXMpO1xuICAgICAgICAgICAgICByZXNvbHZlKGZpbGVzKTtcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICByZWplY3QoZXJyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc3QgaXRlbXMgPSBQcm9taXNlLmFsbChiYXRjaC5tYXAoZnJvbUVudHJ5KSk7XG4gICAgICAgICAgICBlbnRyaWVzLnB1c2goaXRlbXMpO1xuICAgICAgICAgICAgcmVhZEVudHJpZXMoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pLFxuICAgICAgICAoZXJyKSA9PiB7XG4gICAgICAgICAgcmVqZWN0KGVycik7XG4gICAgICAgIH1cbiAgICAgICk7XG4gICAgfVxuICAgIHJlYWRFbnRyaWVzKCk7XG4gIH0pO1xufVxuZnVuY3Rpb24gZnJvbUZpbGVFbnRyeShlbnRyeSkge1xuICByZXR1cm4gX19hc3luYyh0aGlzLCBudWxsLCBmdW5jdGlvbiogKCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICBlbnRyeS5maWxlKFxuICAgICAgICAoZmlsZSkgPT4ge1xuICAgICAgICAgIGNvbnN0IGZ3cCA9IHRvRmlsZVdpdGhQYXRoKGZpbGUsIGVudHJ5LmZ1bGxQYXRoKTtcbiAgICAgICAgICByZXNvbHZlKGZ3cCk7XG4gICAgICAgIH0sXG4gICAgICAgIChlcnIpID0+IHtcbiAgICAgICAgICByZWplY3QoZXJyKTtcbiAgICAgICAgfVxuICAgICAgKTtcbiAgICB9KTtcbiAgfSk7XG59XG5cbmV4cG9ydCB7IGZyb21FdmVudCB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-dropzone-esm/dist/esm/file-selector.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-dropzone-esm/dist/esm/file.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/react-dropzone-esm/dist/esm/file.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   COMMON_MIME_TYPES: () => (/* binding */ COMMON_MIME_TYPES),\n/* harmony export */   toFileWithPath: () => (/* binding */ toFileWithPath)\n/* harmony export */ });\nconst COMMON_MIME_TYPES = /* @__PURE__ */ new Map([\n  // https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\n  [\"aac\", \"audio/aac\"],\n  [\"abw\", \"application/x-abiword\"],\n  [\"arc\", \"application/x-freearc\"],\n  [\"avif\", \"image/avif\"],\n  [\"avi\", \"video/x-msvideo\"],\n  [\"azw\", \"application/vnd.amazon.ebook\"],\n  [\"bin\", \"application/octet-stream\"],\n  [\"bmp\", \"image/bmp\"],\n  [\"bz\", \"application/x-bzip\"],\n  [\"bz2\", \"application/x-bzip2\"],\n  [\"cda\", \"application/x-cdf\"],\n  [\"csh\", \"application/x-csh\"],\n  [\"css\", \"text/css\"],\n  [\"csv\", \"text/csv\"],\n  [\"doc\", \"application/msword\"],\n  [\n    \"docx\",\n    \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\n  ],\n  [\"eot\", \"application/vnd.ms-fontobject\"],\n  [\"epub\", \"application/epub+zip\"],\n  [\"gz\", \"application/gzip\"],\n  [\"gif\", \"image/gif\"],\n  [\"heic\", \"image/heic\"],\n  [\"heif\", \"image/heif\"],\n  [\"htm\", \"text/html\"],\n  [\"html\", \"text/html\"],\n  [\"ico\", \"image/vnd.microsoft.icon\"],\n  [\"ics\", \"text/calendar\"],\n  [\"jar\", \"application/java-archive\"],\n  [\"jpeg\", \"image/jpeg\"],\n  [\"jpg\", \"image/jpeg\"],\n  [\"js\", \"text/javascript\"],\n  [\"json\", \"application/json\"],\n  [\"jsonld\", \"application/ld+json\"],\n  [\"mid\", \"audio/midi\"],\n  [\"midi\", \"audio/midi\"],\n  [\"mjs\", \"text/javascript\"],\n  [\"mp3\", \"audio/mpeg\"],\n  [\"mp4\", \"video/mp4\"],\n  [\"mpeg\", \"video/mpeg\"],\n  [\"mpkg\", \"application/vnd.apple.installer+xml\"],\n  [\"odp\", \"application/vnd.oasis.opendocument.presentation\"],\n  [\"ods\", \"application/vnd.oasis.opendocument.spreadsheet\"],\n  [\"odt\", \"application/vnd.oasis.opendocument.text\"],\n  [\"oga\", \"audio/ogg\"],\n  [\"ogv\", \"video/ogg\"],\n  [\"ogx\", \"application/ogg\"],\n  [\"opus\", \"audio/opus\"],\n  [\"otf\", \"font/otf\"],\n  [\"png\", \"image/png\"],\n  [\"pdf\", \"application/pdf\"],\n  [\"php\", \"application/x-httpd-php\"],\n  [\"ppt\", \"application/vnd.ms-powerpoint\"],\n  [\n    \"pptx\",\n    \"application/vnd.openxmlformats-officedocument.presentationml.presentation\"\n  ],\n  [\"rar\", \"application/vnd.rar\"],\n  [\"rtf\", \"application/rtf\"],\n  [\"sh\", \"application/x-sh\"],\n  [\"svg\", \"image/svg+xml\"],\n  [\"swf\", \"application/x-shockwave-flash\"],\n  [\"tar\", \"application/x-tar\"],\n  [\"tif\", \"image/tiff\"],\n  [\"tiff\", \"image/tiff\"],\n  [\"ts\", \"video/mp2t\"],\n  [\"ttf\", \"font/ttf\"],\n  [\"txt\", \"text/plain\"],\n  [\"vsd\", \"application/vnd.visio\"],\n  [\"wav\", \"audio/wav\"],\n  [\"weba\", \"audio/webm\"],\n  [\"webm\", \"video/webm\"],\n  [\"webp\", \"image/webp\"],\n  [\"woff\", \"font/woff\"],\n  [\"woff2\", \"font/woff2\"],\n  [\"xhtml\", \"application/xhtml+xml\"],\n  [\"xls\", \"application/vnd.ms-excel\"],\n  [\"xlsx\", \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"],\n  [\"xml\", \"application/xml\"],\n  [\"xul\", \"application/vnd.mozilla.xul+xml\"],\n  [\"zip\", \"application/zip\"],\n  [\"7z\", \"application/x-7z-compressed\"],\n  // Others\n  [\"mkv\", \"video/x-matroska\"],\n  [\"mov\", \"video/quicktime\"],\n  [\"msg\", \"application/vnd.ms-outlook\"]\n]);\nfunction toFileWithPath(file, path) {\n  const f = withMimeType(file);\n  if (typeof f.path !== \"string\") {\n    const { webkitRelativePath } = file;\n    Object.defineProperty(f, \"path\", {\n      value: typeof path === \"string\" ? path : (\n        // If <input webkitdirectory> is set,\n        // the File will have a {webkitRelativePath} property\n        // https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/webkitdirectory\n        typeof webkitRelativePath === \"string\" && webkitRelativePath.length > 0 ? webkitRelativePath : file.name\n      ),\n      writable: false,\n      configurable: false,\n      enumerable: true\n    });\n  }\n  return f;\n}\nfunction withMimeType(file) {\n  const { name } = file;\n  const hasExtension = name && name.lastIndexOf(\".\") !== -1;\n  if (hasExtension && !file.type) {\n    const ext = name.split(\".\").pop().toLowerCase();\n    const type = COMMON_MIME_TYPES.get(ext);\n    if (type) {\n      Object.defineProperty(file, \"type\", {\n        value: type,\n        writable: false,\n        configurable: false,\n        enumerable: true\n      });\n    }\n  }\n  return file;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVhY3QtZHJvcHpvbmUtZXNtL2Rpc3QvZXNtL2ZpbGUubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxxQkFBcUI7QUFDakM7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLG9CQUFvQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLE9BQU87QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7O0FBRTZDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFudGluZS1taW5pbWFsLW5leHQtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvcmVhY3QtZHJvcHpvbmUtZXNtL2Rpc3QvZXNtL2ZpbGUubWpzPzg3NjAiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgQ09NTU9OX01JTUVfVFlQRVMgPSAvKiBAX19QVVJFX18gKi8gbmV3IE1hcChbXG4gIC8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0hUVFAvQmFzaWNzX29mX0hUVFAvTUlNRV90eXBlcy9Db21tb25fdHlwZXNcbiAgW1wiYWFjXCIsIFwiYXVkaW8vYWFjXCJdLFxuICBbXCJhYndcIiwgXCJhcHBsaWNhdGlvbi94LWFiaXdvcmRcIl0sXG4gIFtcImFyY1wiLCBcImFwcGxpY2F0aW9uL3gtZnJlZWFyY1wiXSxcbiAgW1wiYXZpZlwiLCBcImltYWdlL2F2aWZcIl0sXG4gIFtcImF2aVwiLCBcInZpZGVvL3gtbXN2aWRlb1wiXSxcbiAgW1wiYXp3XCIsIFwiYXBwbGljYXRpb24vdm5kLmFtYXpvbi5lYm9va1wiXSxcbiAgW1wiYmluXCIsIFwiYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtXCJdLFxuICBbXCJibXBcIiwgXCJpbWFnZS9ibXBcIl0sXG4gIFtcImJ6XCIsIFwiYXBwbGljYXRpb24veC1iemlwXCJdLFxuICBbXCJiejJcIiwgXCJhcHBsaWNhdGlvbi94LWJ6aXAyXCJdLFxuICBbXCJjZGFcIiwgXCJhcHBsaWNhdGlvbi94LWNkZlwiXSxcbiAgW1wiY3NoXCIsIFwiYXBwbGljYXRpb24veC1jc2hcIl0sXG4gIFtcImNzc1wiLCBcInRleHQvY3NzXCJdLFxuICBbXCJjc3ZcIiwgXCJ0ZXh0L2NzdlwiXSxcbiAgW1wiZG9jXCIsIFwiYXBwbGljYXRpb24vbXN3b3JkXCJdLFxuICBbXG4gICAgXCJkb2N4XCIsXG4gICAgXCJhcHBsaWNhdGlvbi92bmQub3BlbnhtbGZvcm1hdHMtb2ZmaWNlZG9jdW1lbnQud29yZHByb2Nlc3NpbmdtbC5kb2N1bWVudFwiXG4gIF0sXG4gIFtcImVvdFwiLCBcImFwcGxpY2F0aW9uL3ZuZC5tcy1mb250b2JqZWN0XCJdLFxuICBbXCJlcHViXCIsIFwiYXBwbGljYXRpb24vZXB1Yit6aXBcIl0sXG4gIFtcImd6XCIsIFwiYXBwbGljYXRpb24vZ3ppcFwiXSxcbiAgW1wiZ2lmXCIsIFwiaW1hZ2UvZ2lmXCJdLFxuICBbXCJoZWljXCIsIFwiaW1hZ2UvaGVpY1wiXSxcbiAgW1wiaGVpZlwiLCBcImltYWdlL2hlaWZcIl0sXG4gIFtcImh0bVwiLCBcInRleHQvaHRtbFwiXSxcbiAgW1wiaHRtbFwiLCBcInRleHQvaHRtbFwiXSxcbiAgW1wiaWNvXCIsIFwiaW1hZ2Uvdm5kLm1pY3Jvc29mdC5pY29uXCJdLFxuICBbXCJpY3NcIiwgXCJ0ZXh0L2NhbGVuZGFyXCJdLFxuICBbXCJqYXJcIiwgXCJhcHBsaWNhdGlvbi9qYXZhLWFyY2hpdmVcIl0sXG4gIFtcImpwZWdcIiwgXCJpbWFnZS9qcGVnXCJdLFxuICBbXCJqcGdcIiwgXCJpbWFnZS9qcGVnXCJdLFxuICBbXCJqc1wiLCBcInRleHQvamF2YXNjcmlwdFwiXSxcbiAgW1wianNvblwiLCBcImFwcGxpY2F0aW9uL2pzb25cIl0sXG4gIFtcImpzb25sZFwiLCBcImFwcGxpY2F0aW9uL2xkK2pzb25cIl0sXG4gIFtcIm1pZFwiLCBcImF1ZGlvL21pZGlcIl0sXG4gIFtcIm1pZGlcIiwgXCJhdWRpby9taWRpXCJdLFxuICBbXCJtanNcIiwgXCJ0ZXh0L2phdmFzY3JpcHRcIl0sXG4gIFtcIm1wM1wiLCBcImF1ZGlvL21wZWdcIl0sXG4gIFtcIm1wNFwiLCBcInZpZGVvL21wNFwiXSxcbiAgW1wibXBlZ1wiLCBcInZpZGVvL21wZWdcIl0sXG4gIFtcIm1wa2dcIiwgXCJhcHBsaWNhdGlvbi92bmQuYXBwbGUuaW5zdGFsbGVyK3htbFwiXSxcbiAgW1wib2RwXCIsIFwiYXBwbGljYXRpb24vdm5kLm9hc2lzLm9wZW5kb2N1bWVudC5wcmVzZW50YXRpb25cIl0sXG4gIFtcIm9kc1wiLCBcImFwcGxpY2F0aW9uL3ZuZC5vYXNpcy5vcGVuZG9jdW1lbnQuc3ByZWFkc2hlZXRcIl0sXG4gIFtcIm9kdFwiLCBcImFwcGxpY2F0aW9uL3ZuZC5vYXNpcy5vcGVuZG9jdW1lbnQudGV4dFwiXSxcbiAgW1wib2dhXCIsIFwiYXVkaW8vb2dnXCJdLFxuICBbXCJvZ3ZcIiwgXCJ2aWRlby9vZ2dcIl0sXG4gIFtcIm9neFwiLCBcImFwcGxpY2F0aW9uL29nZ1wiXSxcbiAgW1wib3B1c1wiLCBcImF1ZGlvL29wdXNcIl0sXG4gIFtcIm90ZlwiLCBcImZvbnQvb3RmXCJdLFxuICBbXCJwbmdcIiwgXCJpbWFnZS9wbmdcIl0sXG4gIFtcInBkZlwiLCBcImFwcGxpY2F0aW9uL3BkZlwiXSxcbiAgW1wicGhwXCIsIFwiYXBwbGljYXRpb24veC1odHRwZC1waHBcIl0sXG4gIFtcInBwdFwiLCBcImFwcGxpY2F0aW9uL3ZuZC5tcy1wb3dlcnBvaW50XCJdLFxuICBbXG4gICAgXCJwcHR4XCIsXG4gICAgXCJhcHBsaWNhdGlvbi92bmQub3BlbnhtbGZvcm1hdHMtb2ZmaWNlZG9jdW1lbnQucHJlc2VudGF0aW9ubWwucHJlc2VudGF0aW9uXCJcbiAgXSxcbiAgW1wicmFyXCIsIFwiYXBwbGljYXRpb24vdm5kLnJhclwiXSxcbiAgW1wicnRmXCIsIFwiYXBwbGljYXRpb24vcnRmXCJdLFxuICBbXCJzaFwiLCBcImFwcGxpY2F0aW9uL3gtc2hcIl0sXG4gIFtcInN2Z1wiLCBcImltYWdlL3N2Zyt4bWxcIl0sXG4gIFtcInN3ZlwiLCBcImFwcGxpY2F0aW9uL3gtc2hvY2t3YXZlLWZsYXNoXCJdLFxuICBbXCJ0YXJcIiwgXCJhcHBsaWNhdGlvbi94LXRhclwiXSxcbiAgW1widGlmXCIsIFwiaW1hZ2UvdGlmZlwiXSxcbiAgW1widGlmZlwiLCBcImltYWdlL3RpZmZcIl0sXG4gIFtcInRzXCIsIFwidmlkZW8vbXAydFwiXSxcbiAgW1widHRmXCIsIFwiZm9udC90dGZcIl0sXG4gIFtcInR4dFwiLCBcInRleHQvcGxhaW5cIl0sXG4gIFtcInZzZFwiLCBcImFwcGxpY2F0aW9uL3ZuZC52aXNpb1wiXSxcbiAgW1wid2F2XCIsIFwiYXVkaW8vd2F2XCJdLFxuICBbXCJ3ZWJhXCIsIFwiYXVkaW8vd2VibVwiXSxcbiAgW1wid2VibVwiLCBcInZpZGVvL3dlYm1cIl0sXG4gIFtcIndlYnBcIiwgXCJpbWFnZS93ZWJwXCJdLFxuICBbXCJ3b2ZmXCIsIFwiZm9udC93b2ZmXCJdLFxuICBbXCJ3b2ZmMlwiLCBcImZvbnQvd29mZjJcIl0sXG4gIFtcInhodG1sXCIsIFwiYXBwbGljYXRpb24veGh0bWwreG1sXCJdLFxuICBbXCJ4bHNcIiwgXCJhcHBsaWNhdGlvbi92bmQubXMtZXhjZWxcIl0sXG4gIFtcInhsc3hcIiwgXCJhcHBsaWNhdGlvbi92bmQub3BlbnhtbGZvcm1hdHMtb2ZmaWNlZG9jdW1lbnQuc3ByZWFkc2hlZXRtbC5zaGVldFwiXSxcbiAgW1wieG1sXCIsIFwiYXBwbGljYXRpb24veG1sXCJdLFxuICBbXCJ4dWxcIiwgXCJhcHBsaWNhdGlvbi92bmQubW96aWxsYS54dWwreG1sXCJdLFxuICBbXCJ6aXBcIiwgXCJhcHBsaWNhdGlvbi96aXBcIl0sXG4gIFtcIjd6XCIsIFwiYXBwbGljYXRpb24veC03ei1jb21wcmVzc2VkXCJdLFxuICAvLyBPdGhlcnNcbiAgW1wibWt2XCIsIFwidmlkZW8veC1tYXRyb3NrYVwiXSxcbiAgW1wibW92XCIsIFwidmlkZW8vcXVpY2t0aW1lXCJdLFxuICBbXCJtc2dcIiwgXCJhcHBsaWNhdGlvbi92bmQubXMtb3V0bG9va1wiXVxuXSk7XG5mdW5jdGlvbiB0b0ZpbGVXaXRoUGF0aChmaWxlLCBwYXRoKSB7XG4gIGNvbnN0IGYgPSB3aXRoTWltZVR5cGUoZmlsZSk7XG4gIGlmICh0eXBlb2YgZi5wYXRoICE9PSBcInN0cmluZ1wiKSB7XG4gICAgY29uc3QgeyB3ZWJraXRSZWxhdGl2ZVBhdGggfSA9IGZpbGU7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGYsIFwicGF0aFwiLCB7XG4gICAgICB2YWx1ZTogdHlwZW9mIHBhdGggPT09IFwic3RyaW5nXCIgPyBwYXRoIDogKFxuICAgICAgICAvLyBJZiA8aW5wdXQgd2Via2l0ZGlyZWN0b3J5PiBpcyBzZXQsXG4gICAgICAgIC8vIHRoZSBGaWxlIHdpbGwgaGF2ZSBhIHt3ZWJraXRSZWxhdGl2ZVBhdGh9IHByb3BlcnR5XG4gICAgICAgIC8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9IVE1MSW5wdXRFbGVtZW50L3dlYmtpdGRpcmVjdG9yeVxuICAgICAgICB0eXBlb2Ygd2Via2l0UmVsYXRpdmVQYXRoID09PSBcInN0cmluZ1wiICYmIHdlYmtpdFJlbGF0aXZlUGF0aC5sZW5ndGggPiAwID8gd2Via2l0UmVsYXRpdmVQYXRoIDogZmlsZS5uYW1lXG4gICAgICApLFxuICAgICAgd3JpdGFibGU6IGZhbHNlLFxuICAgICAgY29uZmlndXJhYmxlOiBmYWxzZSxcbiAgICAgIGVudW1lcmFibGU6IHRydWVcbiAgICB9KTtcbiAgfVxuICByZXR1cm4gZjtcbn1cbmZ1bmN0aW9uIHdpdGhNaW1lVHlwZShmaWxlKSB7XG4gIGNvbnN0IHsgbmFtZSB9ID0gZmlsZTtcbiAgY29uc3QgaGFzRXh0ZW5zaW9uID0gbmFtZSAmJiBuYW1lLmxhc3RJbmRleE9mKFwiLlwiKSAhPT0gLTE7XG4gIGlmIChoYXNFeHRlbnNpb24gJiYgIWZpbGUudHlwZSkge1xuICAgIGNvbnN0IGV4dCA9IG5hbWUuc3BsaXQoXCIuXCIpLnBvcCgpLnRvTG93ZXJDYXNlKCk7XG4gICAgY29uc3QgdHlwZSA9IENPTU1PTl9NSU1FX1RZUEVTLmdldChleHQpO1xuICAgIGlmICh0eXBlKSB7XG4gICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZmlsZSwgXCJ0eXBlXCIsIHtcbiAgICAgICAgdmFsdWU6IHR5cGUsXG4gICAgICAgIHdyaXRhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiBmYWxzZSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZVxuICAgICAgfSk7XG4gICAgfVxuICB9XG4gIHJldHVybiBmaWxlO1xufVxuXG5leHBvcnQgeyBDT01NT05fTUlNRV9UWVBFUywgdG9GaWxlV2l0aFBhdGggfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-dropzone-esm/dist/esm/file.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-dropzone-esm/dist/esm/index.mjs":
/*!************************************************************!*\
  !*** ./node_modules/react-dropzone-esm/dist/esm/index.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ErrorCode: () => (/* reexport safe */ _utils_mjs__WEBPACK_IMPORTED_MODULE_1__.ErrorCode),\n/* harmony export */   \"default\": () => (/* binding */ Dropzone),\n/* harmony export */   useDropzone: () => (/* binding */ useDropzone)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! prop-types */ \"(ssr)/./node_modules/prop-types/index.js\");\n/* harmony import */ var _file_selector_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./file-selector.mjs */ \"(ssr)/./node_modules/react-dropzone-esm/dist/esm/file-selector.mjs\");\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.mjs */ \"(ssr)/./node_modules/react-dropzone-esm/dist/esm/utils.mjs\");\n/* __next_internal_client_entry_do_not_use__ ErrorCode,default,useDropzone auto */ \n\n\n\n\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value)=>key in obj ? __defProp(obj, key, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value\n    }) : obj[key] = value;\nvar __spreadValues = (a, b)=>{\n    for(var prop in b || (b = {}))if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n    if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)){\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n    }\n    return a;\n};\nvar __spreadProps = (a, b)=>__defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude)=>{\n    var target = {};\n    for(var prop in source)if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n    if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)){\n        if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n    }\n    return target;\n};\nconst Dropzone = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((_a, ref)=>{\n    var _b = _a, { children } = _b, params = __objRest(_b, [\n        \"children\"\n    ]);\n    const _a2 = useDropzone(params), { open } = _a2, props = __objRest(_a2, [\n        \"open\"\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle)(ref, ()=>({\n            open\n        }), [\n        open\n    ]);\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, children(__spreadProps(__spreadValues({}, props), {\n        open\n    })));\n});\nDropzone.displayName = \"Dropzone\";\nconst defaultProps = {\n    disabled: false,\n    getFilesFromEvent: _file_selector_mjs__WEBPACK_IMPORTED_MODULE_2__.fromEvent,\n    maxSize: Infinity,\n    minSize: 0,\n    multiple: true,\n    maxFiles: 0,\n    preventDropOnDocument: true,\n    noClick: false,\n    noKeyboard: false,\n    noDrag: false,\n    noDragEventsBubbling: false,\n    validator: null,\n    useFsAccessApi: true,\n    autoFocus: false\n};\nDropzone.defaultProps = defaultProps;\nDropzone.propTypes = {\n    /**\n   * Render function that exposes the dropzone state and prop getter fns\n   *\n   * @param {object} params\n   * @param {Function} params.getRootProps Returns the props you should apply to the root drop container you render\n   * @param {Function} params.getInputProps Returns the props you should apply to hidden file input you render\n   * @param {Function} params.open Open the native file selection dialog\n   * @param {boolean} params.isFocused Dropzone area is in focus\n   * @param {boolean} params.isFileDialogActive File dialog is opened\n   * @param {boolean} params.isDragActive Active drag is in progress\n   * @param {boolean} params.isDragAccept Dragged files are accepted\n   * @param {boolean} params.isDragReject Some dragged files are rejected\n   * @param {File[]} params.acceptedFiles Accepted files\n   * @param {FileRejection[]} params.fileRejections Rejected files and why they were rejected\n   */ children: prop_types__WEBPACK_IMPORTED_MODULE_3__.func,\n    /**\n   * Set accepted file types.\n   * Checkout https://developer.mozilla.org/en-US/docs/Web/API/window/showOpenFilePicker types option for more information.\n   * Keep in mind that mime type determination is not reliable across platforms. CSV files,\n   * for example, are reported as text/plain under macOS but as application/vnd.ms-excel under\n   * Windows. In some cases there might not be a mime type set at all (https://github.com/react-dropzone/react-dropzone/issues/276).\n   */ accept: prop_types__WEBPACK_IMPORTED_MODULE_3__.objectOf(prop_types__WEBPACK_IMPORTED_MODULE_3__.arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_3__.string)),\n    /**\n   * Allow drag 'n' drop (or selection from the file dialog) of multiple files\n   */ multiple: prop_types__WEBPACK_IMPORTED_MODULE_3__.bool,\n    /**\n   * If false, allow dropped items to take over the current browser window\n   */ preventDropOnDocument: prop_types__WEBPACK_IMPORTED_MODULE_3__.bool,\n    /**\n   * If true, disables click to open the native file selection dialog\n   */ noClick: prop_types__WEBPACK_IMPORTED_MODULE_3__.bool,\n    /**\n   * If true, disables SPACE/ENTER to open the native file selection dialog.\n   * Note that it also stops tracking the focus state.\n   */ noKeyboard: prop_types__WEBPACK_IMPORTED_MODULE_3__.bool,\n    /**\n   * If true, disables drag 'n' drop\n   */ noDrag: prop_types__WEBPACK_IMPORTED_MODULE_3__.bool,\n    /**\n   * If true, stops drag event propagation to parents\n   */ noDragEventsBubbling: prop_types__WEBPACK_IMPORTED_MODULE_3__.bool,\n    /**\n   * Minimum file size (in bytes)\n   */ minSize: prop_types__WEBPACK_IMPORTED_MODULE_3__.number,\n    /**\n   * Maximum file size (in bytes)\n   */ maxSize: prop_types__WEBPACK_IMPORTED_MODULE_3__.number,\n    /**\n   * Maximum accepted number of files\n   * The default value is 0 which means there is no limitation to how many files are accepted.\n   */ maxFiles: prop_types__WEBPACK_IMPORTED_MODULE_3__.number,\n    /**\n   * Enable/disable the dropzone\n   */ disabled: prop_types__WEBPACK_IMPORTED_MODULE_3__.bool,\n    /**\n   * Use this to provide a custom file aggregator\n   *\n   * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\n   */ getFilesFromEvent: prop_types__WEBPACK_IMPORTED_MODULE_3__.func,\n    /**\n   * Cb for when closing the file dialog with no selection\n   */ onFileDialogCancel: prop_types__WEBPACK_IMPORTED_MODULE_3__.func,\n    /**\n   * Cb for when opening the file dialog\n   */ onFileDialogOpen: prop_types__WEBPACK_IMPORTED_MODULE_3__.func,\n    /**\n   * Set to true to use the https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API\n   * to open the file picker instead of using an `<input type=\"file\">` click event.\n   */ useFsAccessApi: prop_types__WEBPACK_IMPORTED_MODULE_3__.bool,\n    /**\n   * Set to true to focus the root element on render\n   */ autoFocus: prop_types__WEBPACK_IMPORTED_MODULE_3__.bool,\n    /**\n   * Cb for when the `dragenter` event occurs.\n   *\n   * @param {DragEvent} event\n   */ onDragEnter: prop_types__WEBPACK_IMPORTED_MODULE_3__.func,\n    /**\n   * Cb for when the `dragleave` event occurs\n   *\n   * @param {DragEvent} event\n   */ onDragLeave: prop_types__WEBPACK_IMPORTED_MODULE_3__.func,\n    /**\n   * Cb for when the `dragover` event occurs\n   *\n   * @param {DragEvent} event\n   */ onDragOver: prop_types__WEBPACK_IMPORTED_MODULE_3__.func,\n    /**\n   * Cb for when the `drop` event occurs.\n   * Note that this callback is invoked after the `getFilesFromEvent` callback is done.\n   *\n   * Files are accepted or rejected based on the `accept`, `multiple`, `minSize` and `maxSize` props.\n   * `accept` must be a valid [MIME type](http://www.iana.org/assignments/media-types/media-types.xhtml) according to [input element specification](https://www.w3.org/wiki/HTML/Elements/input/file) or a valid file extension.\n   * If `multiple` is set to false and additional files are dropped,\n   * all files besides the first will be rejected.\n   * Any file which does not have a size in the [`minSize`, `maxSize`] range, will be rejected as well.\n   *\n   * Note that the `onDrop` callback will always be invoked regardless if the dropped files were accepted or rejected.\n   * If you'd like to react to a specific scenario, use the `onDropAccepted`/`onDropRejected` props.\n   *\n   * `onDrop` will provide you with an array of [File](https://developer.mozilla.org/en-US/docs/Web/API/File) objects which you can then process and send to a server.\n   * For example, with [SuperAgent](https://github.com/visionmedia/superagent) as a http/ajax library:\n   *\n   * ```js\n   * function onDrop(acceptedFiles) {\n   *   const req = request.post('/upload')\n   *   acceptedFiles.forEach(file => {\n   *     req.attach(file.name, file)\n   *   })\n   *   req.end(callback)\n   * }\n   * ```\n   *\n   * @param {File[]} acceptedFiles\n   * @param {FileRejection[]} fileRejections\n   * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\n   */ onDrop: prop_types__WEBPACK_IMPORTED_MODULE_3__.func,\n    /**\n   * Cb for when the `drop` event occurs.\n   * Note that if no files are accepted, this callback is not invoked.\n   *\n   * @param {File[]} files\n   * @param {(DragEvent|Event)} event\n   */ onDropAccepted: prop_types__WEBPACK_IMPORTED_MODULE_3__.func,\n    /**\n   * Cb for when the `drop` event occurs.\n   * Note that if no files are rejected, this callback is not invoked.\n   *\n   * @param {FileRejection[]} fileRejections\n   * @param {(DragEvent|Event)} event\n   */ onDropRejected: prop_types__WEBPACK_IMPORTED_MODULE_3__.func,\n    /**\n   * Cb for when there's some error from any of the promises.\n   *\n   * @param {Error} error\n   */ onError: prop_types__WEBPACK_IMPORTED_MODULE_3__.func,\n    /**\n   * Custom validation function. It must return null if there's no errors.\n   * @param {File} file\n   * @returns {FileError|FileError[]|null}\n   */ validator: prop_types__WEBPACK_IMPORTED_MODULE_3__.func\n};\nconst initialState = {\n    isFocused: false,\n    isFileDialogActive: false,\n    isDragActive: false,\n    isDragAccept: false,\n    isDragReject: false,\n    acceptedFiles: [],\n    fileRejections: []\n};\nfunction useDropzone(props = {}) {\n    const { accept, disabled, getFilesFromEvent, maxSize, minSize, multiple, maxFiles, onDragEnter, onDragLeave, onDragOver, onDrop, onDropAccepted, onDropRejected, onFileDialogCancel, onFileDialogOpen, useFsAccessApi, autoFocus, preventDropOnDocument, noClick, noKeyboard, noDrag, noDragEventsBubbling, onError, validator } = __spreadValues(__spreadValues({}, defaultProps), props);\n    const acceptAttr = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>(0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.acceptPropAsAcceptAttr)(accept), [\n        accept\n    ]);\n    const pickerTypes = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>(0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.pickerOptionsFromAccept)(accept), [\n        accept\n    ]);\n    const onFileDialogOpenCb = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>typeof onFileDialogOpen === \"function\" ? onFileDialogOpen : noop, [\n        onFileDialogOpen\n    ]);\n    const onFileDialogCancelCb = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>typeof onFileDialogCancel === \"function\" ? onFileDialogCancel : noop, [\n        onFileDialogCancel\n    ]);\n    const rootRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const inputRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const [state, dispatch] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useReducer)(reducer, initialState);\n    const { isFocused, isFileDialogActive } = state;\n    const fsAccessApiWorksRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)( false && 0);\n    const onWindowFocus = ()=>{\n        if (!fsAccessApiWorksRef.current && isFileDialogActive) {\n            setTimeout(()=>{\n                if (inputRef.current) {\n                    const { files } = inputRef.current;\n                    if (!files.length) {\n                        dispatch({\n                            type: \"closeDialog\"\n                        });\n                        onFileDialogCancelCb();\n                    }\n                }\n            }, 300);\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        window.addEventListener(\"focus\", onWindowFocus, false);\n        return ()=>{\n            window.removeEventListener(\"focus\", onWindowFocus, false);\n        };\n    }, [\n        inputRef,\n        isFileDialogActive,\n        onFileDialogCancelCb,\n        fsAccessApiWorksRef\n    ]);\n    const dragTargetsRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)([]);\n    const onDocumentDrop = (event)=>{\n        if (rootRef.current && rootRef.current.contains(event.target)) {\n            return;\n        }\n        event.preventDefault();\n        dragTargetsRef.current = [];\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (preventDropOnDocument) {\n            document.addEventListener(\"dragover\", _utils_mjs__WEBPACK_IMPORTED_MODULE_1__.onDocumentDragOver, false);\n            document.addEventListener(\"drop\", onDocumentDrop, false);\n        }\n        return ()=>{\n            if (preventDropOnDocument) {\n                document.removeEventListener(\"dragover\", _utils_mjs__WEBPACK_IMPORTED_MODULE_1__.onDocumentDragOver);\n                document.removeEventListener(\"drop\", onDocumentDrop);\n            }\n        };\n    }, [\n        rootRef,\n        preventDropOnDocument\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!disabled && autoFocus && rootRef.current) {\n            rootRef.current.focus();\n        }\n        return ()=>{};\n    }, [\n        rootRef,\n        autoFocus,\n        disabled\n    ]);\n    const onErrCb = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((e)=>{\n        if (onError) {\n            onError(e);\n        } else {\n            console.error(e);\n        }\n    }, [\n        onError\n    ]);\n    const onDragEnterCb = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((event)=>{\n        event.preventDefault();\n        event.persist();\n        stopPropagation(event);\n        dragTargetsRef.current = [\n            ...dragTargetsRef.current,\n            event.target\n        ];\n        if ((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.isEvtWithFiles)(event)) {\n            Promise.resolve(getFilesFromEvent(event)).then((files)=>{\n                if ((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.isPropagationStopped)(event) && !noDragEventsBubbling) {\n                    return;\n                }\n                const fileCount = files.length;\n                const isDragAccept = fileCount > 0 && (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.allFilesAccepted)({\n                    files,\n                    accept: acceptAttr,\n                    minSize,\n                    maxSize,\n                    multiple,\n                    maxFiles,\n                    validator\n                });\n                const isDragReject = fileCount > 0 && !isDragAccept;\n                dispatch({\n                    isDragAccept,\n                    isDragReject,\n                    isDragActive: true,\n                    type: \"setDraggedFiles\"\n                });\n                if (onDragEnter) {\n                    onDragEnter(event);\n                }\n            }).catch((e)=>onErrCb(e));\n        }\n    }, [\n        getFilesFromEvent,\n        onDragEnter,\n        onErrCb,\n        noDragEventsBubbling,\n        acceptAttr,\n        minSize,\n        maxSize,\n        multiple,\n        maxFiles,\n        validator\n    ]);\n    const onDragOverCb = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((event)=>{\n        event.preventDefault();\n        event.persist();\n        stopPropagation(event);\n        const hasFiles = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.isEvtWithFiles)(event);\n        if (hasFiles && event.dataTransfer) {\n            try {\n                event.dataTransfer.dropEffect = \"copy\";\n            } catch (e) {}\n        }\n        if (hasFiles && onDragOver) {\n            onDragOver(event);\n        }\n        return false;\n    }, [\n        onDragOver,\n        noDragEventsBubbling\n    ]);\n    const onDragLeaveCb = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((event)=>{\n        event.preventDefault();\n        event.persist();\n        stopPropagation(event);\n        const targets = dragTargetsRef.current.filter((target)=>rootRef.current && rootRef.current.contains(target));\n        const targetIdx = targets.indexOf(event.target);\n        if (targetIdx !== -1) {\n            targets.splice(targetIdx, 1);\n        }\n        dragTargetsRef.current = targets;\n        if (targets.length > 0) {\n            return;\n        }\n        dispatch({\n            type: \"setDraggedFiles\",\n            isDragActive: false,\n            isDragAccept: false,\n            isDragReject: false\n        });\n        if ((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.isEvtWithFiles)(event) && onDragLeave) {\n            onDragLeave(event);\n        }\n    }, [\n        rootRef,\n        onDragLeave,\n        noDragEventsBubbling\n    ]);\n    const setFiles = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((files, event)=>{\n        const acceptedFiles = [];\n        const fileRejections = [];\n        files.forEach((file)=>{\n            const [accepted, acceptError] = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.fileAccepted)(file, acceptAttr);\n            const [sizeMatch, sizeError] = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.fileMatchSize)(file, minSize, maxSize);\n            const customErrors = validator ? validator(file) : null;\n            if (accepted && sizeMatch && !customErrors) {\n                acceptedFiles.push(file);\n            } else {\n                let errors = [\n                    acceptError,\n                    sizeError\n                ];\n                if (customErrors) {\n                    errors = errors.concat(customErrors);\n                }\n                fileRejections.push({\n                    file,\n                    errors: errors.filter((e)=>e)\n                });\n            }\n        });\n        if (!multiple && acceptedFiles.length > 1 || multiple && maxFiles >= 1 && acceptedFiles.length > maxFiles) {\n            acceptedFiles.forEach((file)=>{\n                fileRejections.push({\n                    file,\n                    errors: [\n                        _utils_mjs__WEBPACK_IMPORTED_MODULE_1__.TOO_MANY_FILES_REJECTION\n                    ]\n                });\n            });\n            acceptedFiles.splice(0);\n        }\n        dispatch({\n            acceptedFiles,\n            fileRejections,\n            type: \"setFiles\"\n        });\n        if (onDrop) {\n            onDrop(acceptedFiles, fileRejections, event);\n        }\n        if (fileRejections.length > 0 && onDropRejected) {\n            onDropRejected(fileRejections, event);\n        }\n        if (acceptedFiles.length > 0 && onDropAccepted) {\n            onDropAccepted(acceptedFiles, event);\n        }\n    }, [\n        dispatch,\n        multiple,\n        acceptAttr,\n        minSize,\n        maxSize,\n        maxFiles,\n        onDrop,\n        onDropAccepted,\n        onDropRejected,\n        validator\n    ]);\n    const onDropCb = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((event)=>{\n        event.preventDefault();\n        event.persist();\n        stopPropagation(event);\n        dragTargetsRef.current = [];\n        if ((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.isEvtWithFiles)(event)) {\n            Promise.resolve(getFilesFromEvent(event)).then((files)=>{\n                if ((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.isPropagationStopped)(event) && !noDragEventsBubbling) {\n                    return;\n                }\n                setFiles(files, event);\n            }).catch((e)=>onErrCb(e));\n        }\n        dispatch({\n            type: \"reset\"\n        });\n    }, [\n        getFilesFromEvent,\n        setFiles,\n        onErrCb,\n        noDragEventsBubbling\n    ]);\n    const openFileDialog = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        if (fsAccessApiWorksRef.current) {\n            dispatch({\n                type: \"openDialog\"\n            });\n            onFileDialogOpenCb();\n            const opts = {\n                multiple,\n                types: pickerTypes\n            };\n            window.showOpenFilePicker(opts).then((handles)=>getFilesFromEvent(handles)).then((files)=>{\n                setFiles(files, null);\n                dispatch({\n                    type: \"closeDialog\"\n                });\n            }).catch((e)=>{\n                if ((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.isAbort)(e)) {\n                    onFileDialogCancelCb(e);\n                    dispatch({\n                        type: \"closeDialog\"\n                    });\n                } else if ((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.isSecurityError)(e)) {\n                    fsAccessApiWorksRef.current = false;\n                    if (inputRef.current) {\n                        inputRef.current.value = null;\n                        inputRef.current.click();\n                    } else {\n                        onErrCb(new Error(\"Cannot open the file picker because the https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API is not supported and no <input> was provided.\"));\n                    }\n                } else {\n                    onErrCb(e);\n                }\n            });\n            return;\n        }\n        if (inputRef.current) {\n            dispatch({\n                type: \"openDialog\"\n            });\n            onFileDialogOpenCb();\n            inputRef.current.value = null;\n            inputRef.current.click();\n        }\n    }, [\n        dispatch,\n        onFileDialogOpenCb,\n        onFileDialogCancelCb,\n        useFsAccessApi,\n        setFiles,\n        onErrCb,\n        pickerTypes,\n        multiple\n    ]);\n    const onKeyDownCb = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((event)=>{\n        if (!rootRef.current || !rootRef.current.isEqualNode(event.target)) {\n            return;\n        }\n        if (event.key === \" \" || event.key === \"Enter\" || event.keyCode === 32 || event.keyCode === 13) {\n            event.preventDefault();\n            openFileDialog();\n        }\n    }, [\n        rootRef,\n        openFileDialog\n    ]);\n    const onFocusCb = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        dispatch({\n            type: \"focus\"\n        });\n    }, []);\n    const onBlurCb = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        dispatch({\n            type: \"blur\"\n        });\n    }, []);\n    const onClickCb = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        if (noClick) {\n            return;\n        }\n        if ((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.isIeOrEdge)()) {\n            setTimeout(openFileDialog, 0);\n        } else {\n            openFileDialog();\n        }\n    }, [\n        noClick,\n        openFileDialog\n    ]);\n    const composeHandler = (fn)=>{\n        return disabled ? null : fn;\n    };\n    const composeKeyboardHandler = (fn)=>{\n        return noKeyboard ? null : composeHandler(fn);\n    };\n    const composeDragHandler = (fn)=>{\n        return noDrag ? null : composeHandler(fn);\n    };\n    const stopPropagation = (event)=>{\n        if (noDragEventsBubbling) {\n            event.stopPropagation();\n        }\n    };\n    const getRootProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>(_a = {})=>{\n            var _b = _a, { refKey = \"ref\", role, onKeyDown, onFocus, onBlur, onClick, onDragEnter: onDragEnter2, onDragOver: onDragOver2, onDragLeave: onDragLeave2, onDrop: onDrop2 } = _b, rest = __objRest(_b, [\n                \"refKey\",\n                \"role\",\n                \"onKeyDown\",\n                \"onFocus\",\n                \"onBlur\",\n                \"onClick\",\n                \"onDragEnter\",\n                \"onDragOver\",\n                \"onDragLeave\",\n                \"onDrop\"\n            ]);\n            return __spreadValues(__spreadValues({\n                onKeyDown: composeKeyboardHandler((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.composeEventHandlers)(onKeyDown, onKeyDownCb)),\n                onFocus: composeKeyboardHandler((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.composeEventHandlers)(onFocus, onFocusCb)),\n                onBlur: composeKeyboardHandler((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.composeEventHandlers)(onBlur, onBlurCb)),\n                onClick: composeHandler((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.composeEventHandlers)(onClick, onClickCb)),\n                onDragEnter: composeDragHandler((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.composeEventHandlers)(onDragEnter2, onDragEnterCb)),\n                onDragOver: composeDragHandler((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.composeEventHandlers)(onDragOver2, onDragOverCb)),\n                onDragLeave: composeDragHandler((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.composeEventHandlers)(onDragLeave2, onDragLeaveCb)),\n                onDrop: composeDragHandler((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.composeEventHandlers)(onDrop2, onDropCb)),\n                role: typeof role === \"string\" && role !== \"\" ? role : \"presentation\",\n                [refKey]: rootRef\n            }, !disabled && !noKeyboard ? {\n                tabIndex: 0\n            } : {}), rest);\n        }, [\n        rootRef,\n        onKeyDownCb,\n        onFocusCb,\n        onBlurCb,\n        onClickCb,\n        onDragEnterCb,\n        onDragOverCb,\n        onDragLeaveCb,\n        onDropCb,\n        noKeyboard,\n        noDrag,\n        disabled\n    ]);\n    const onInputElementClick = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((event)=>{\n        event.stopPropagation();\n    }, []);\n    const getInputProps = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>(_a = {})=>{\n            var _b = _a, { refKey = \"ref\", onChange, onClick } = _b, rest = __objRest(_b, [\n                \"refKey\",\n                \"onChange\",\n                \"onClick\"\n            ]);\n            const inputProps = {\n                accept: acceptAttr,\n                multiple,\n                type: \"file\",\n                style: {\n                    display: \"none\"\n                },\n                onChange: composeHandler((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.composeEventHandlers)(onChange, onDropCb)),\n                onClick: composeHandler((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.composeEventHandlers)(onClick, onInputElementClick)),\n                tabIndex: -1,\n                [refKey]: inputRef\n            };\n            return __spreadValues(__spreadValues({}, inputProps), rest);\n        }, [\n        inputRef,\n        accept,\n        multiple,\n        onDropCb,\n        disabled\n    ]);\n    return __spreadProps(__spreadValues({}, state), {\n        isFocused: isFocused && !disabled,\n        getRootProps,\n        getInputProps,\n        rootRef,\n        inputRef,\n        open: composeHandler(openFileDialog)\n    });\n}\nfunction reducer(state, action) {\n    switch(action.type){\n        case \"focus\":\n            return __spreadProps(__spreadValues({}, state), {\n                isFocused: true\n            });\n        case \"blur\":\n            return __spreadProps(__spreadValues({}, state), {\n                isFocused: false\n            });\n        case \"openDialog\":\n            return __spreadProps(__spreadValues({}, initialState), {\n                isFileDialogActive: true\n            });\n        case \"closeDialog\":\n            return __spreadProps(__spreadValues({}, state), {\n                isFileDialogActive: false\n            });\n        case \"setDraggedFiles\":\n            return __spreadProps(__spreadValues({}, state), {\n                isDragActive: action.isDragActive,\n                isDragAccept: action.isDragAccept,\n                isDragReject: action.isDragReject\n            });\n        case \"setFiles\":\n            return __spreadProps(__spreadValues({}, state), {\n                acceptedFiles: action.acceptedFiles,\n                fileRejections: action.fileRejections\n            });\n        case \"reset\":\n            return __spreadValues({}, initialState);\n        default:\n            return state;\n    }\n}\nfunction noop() {}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-dropzone-esm/dist/esm/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-dropzone-esm/dist/esm/utils.mjs":
/*!************************************************************!*\
  !*** ./node_modules/react-dropzone-esm/dist/esm/utils.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ErrorCode: () => (/* binding */ ErrorCode),\n/* harmony export */   FILE_INVALID_TYPE: () => (/* binding */ FILE_INVALID_TYPE),\n/* harmony export */   FILE_TOO_LARGE: () => (/* binding */ FILE_TOO_LARGE),\n/* harmony export */   FILE_TOO_SMALL: () => (/* binding */ FILE_TOO_SMALL),\n/* harmony export */   TOO_MANY_FILES: () => (/* binding */ TOO_MANY_FILES),\n/* harmony export */   TOO_MANY_FILES_REJECTION: () => (/* binding */ TOO_MANY_FILES_REJECTION),\n/* harmony export */   acceptPropAsAcceptAttr: () => (/* binding */ acceptPropAsAcceptAttr),\n/* harmony export */   allFilesAccepted: () => (/* binding */ allFilesAccepted),\n/* harmony export */   canUseFileSystemAccessAPI: () => (/* binding */ canUseFileSystemAccessAPI),\n/* harmony export */   composeEventHandlers: () => (/* binding */ composeEventHandlers),\n/* harmony export */   fileAccepted: () => (/* binding */ fileAccepted),\n/* harmony export */   fileMatchSize: () => (/* binding */ fileMatchSize),\n/* harmony export */   getInvalidTypeRejectionErr: () => (/* binding */ getInvalidTypeRejectionErr),\n/* harmony export */   getTooLargeRejectionErr: () => (/* binding */ getTooLargeRejectionErr),\n/* harmony export */   getTooSmallRejectionErr: () => (/* binding */ getTooSmallRejectionErr),\n/* harmony export */   isAbort: () => (/* binding */ isAbort),\n/* harmony export */   isEvtWithFiles: () => (/* binding */ isEvtWithFiles),\n/* harmony export */   isExt: () => (/* binding */ isExt),\n/* harmony export */   isIeOrEdge: () => (/* binding */ isIeOrEdge),\n/* harmony export */   isMIMEType: () => (/* binding */ isMIMEType),\n/* harmony export */   isPropagationStopped: () => (/* binding */ isPropagationStopped),\n/* harmony export */   isSecurityError: () => (/* binding */ isSecurityError),\n/* harmony export */   onDocumentDragOver: () => (/* binding */ onDocumentDragOver),\n/* harmony export */   pickerOptionsFromAccept: () => (/* binding */ pickerOptionsFromAccept)\n/* harmony export */ });\n/* harmony import */ var _attr_accept_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./attr-accept.mjs */ \"(ssr)/./node_modules/react-dropzone-esm/dist/esm/attr-accept.mjs\");\n\n\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nconst FILE_INVALID_TYPE = \"file-invalid-type\";\nconst FILE_TOO_LARGE = \"file-too-large\";\nconst FILE_TOO_SMALL = \"file-too-small\";\nconst TOO_MANY_FILES = \"too-many-files\";\nconst ErrorCode = {\n  FileInvalidType: FILE_INVALID_TYPE,\n  FileTooLarge: FILE_TOO_LARGE,\n  FileTooSmall: FILE_TOO_SMALL,\n  TooManyFiles: TOO_MANY_FILES\n};\nconst getInvalidTypeRejectionErr = (accept) => {\n  accept = Array.isArray(accept) && accept.length === 1 ? accept[0] : accept;\n  const messageSuffix = Array.isArray(accept) ? `one of ${accept.join(\", \")}` : accept;\n  return {\n    code: FILE_INVALID_TYPE,\n    message: `File type must be ${messageSuffix}`\n  };\n};\nconst getTooLargeRejectionErr = (maxSize) => {\n  return {\n    code: FILE_TOO_LARGE,\n    message: `File is larger than ${maxSize} ${maxSize === 1 ? \"byte\" : \"bytes\"}`\n  };\n};\nconst getTooSmallRejectionErr = (minSize) => {\n  return {\n    code: FILE_TOO_SMALL,\n    message: `File is smaller than ${minSize} ${minSize === 1 ? \"byte\" : \"bytes\"}`\n  };\n};\nconst TOO_MANY_FILES_REJECTION = {\n  code: TOO_MANY_FILES,\n  message: \"Too many files\"\n};\nfunction fileAccepted(file, accept) {\n  const isAcceptable = file.type === \"application/x-moz-file\" || (0,_attr_accept_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(file, accept);\n  return [\n    isAcceptable,\n    isAcceptable ? null : getInvalidTypeRejectionErr(accept)\n  ];\n}\nfunction fileMatchSize(file, minSize, maxSize) {\n  if (isDefined(file.size)) {\n    if (isDefined(minSize) && isDefined(maxSize)) {\n      if (file.size > maxSize)\n        return [false, getTooLargeRejectionErr(maxSize)];\n      if (file.size < minSize)\n        return [false, getTooSmallRejectionErr(minSize)];\n    } else if (isDefined(minSize) && file.size < minSize)\n      return [false, getTooSmallRejectionErr(minSize)];\n    else if (isDefined(maxSize) && file.size > maxSize)\n      return [false, getTooLargeRejectionErr(maxSize)];\n  }\n  return [true, null];\n}\nfunction isDefined(value) {\n  return value !== void 0 && value !== null;\n}\nfunction allFilesAccepted({\n  files,\n  accept,\n  minSize,\n  maxSize,\n  multiple,\n  maxFiles,\n  validator\n}) {\n  if (!multiple && files.length > 1 || multiple && maxFiles >= 1 && files.length > maxFiles) {\n    return false;\n  }\n  return files.every((file) => {\n    const [accepted] = fileAccepted(file, accept);\n    const [sizeMatch] = fileMatchSize(file, minSize, maxSize);\n    const customErrors = validator ? validator(file) : null;\n    return accepted && sizeMatch && !customErrors;\n  });\n}\nfunction isPropagationStopped(event) {\n  if (typeof event.isPropagationStopped === \"function\") {\n    return event.isPropagationStopped();\n  } else if (typeof event.cancelBubble !== \"undefined\") {\n    return event.cancelBubble;\n  }\n  return false;\n}\nfunction isEvtWithFiles(event) {\n  if (!event.dataTransfer) {\n    return !!event.target && !!event.target.files;\n  }\n  return Array.prototype.some.call(\n    event.dataTransfer.types,\n    (type) => type === \"Files\" || type === \"application/x-moz-file\"\n  );\n}\nfunction onDocumentDragOver(event) {\n  event.preventDefault();\n}\nfunction isIe(userAgent) {\n  return userAgent.indexOf(\"MSIE\") !== -1 || userAgent.indexOf(\"Trident/\") !== -1;\n}\nfunction isEdge(userAgent) {\n  return userAgent.indexOf(\"Edge/\") !== -1;\n}\nfunction isIeOrEdge(userAgent = window.navigator.userAgent) {\n  return isIe(userAgent) || isEdge(userAgent);\n}\nfunction composeEventHandlers(...fns) {\n  return (event, ...args) => fns.some((fn) => {\n    if (!isPropagationStopped(event) && fn) {\n      fn(event, ...args);\n    }\n    return isPropagationStopped(event);\n  });\n}\nfunction canUseFileSystemAccessAPI() {\n  return \"showOpenFilePicker\" in window;\n}\nfunction pickerOptionsFromAccept(accept) {\n  if (isDefined(accept)) {\n    const acceptForPicker = Object.entries(accept).filter(([mimeType, ext]) => {\n      let ok = true;\n      if (!isMIMEType(mimeType)) {\n        console.warn(\n          `Skipped \"${mimeType}\" because it is not a valid MIME type. Check https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types for a list of valid MIME types.`\n        );\n        ok = false;\n      }\n      if (!Array.isArray(ext) || !ext.every(isExt)) {\n        console.warn(\n          `Skipped \"${mimeType}\" because an invalid file extension was provided.`\n        );\n        ok = false;\n      }\n      return ok;\n    }).reduce(\n      (agg, [mimeType, ext]) => __spreadProps(__spreadValues({}, agg), {\n        [mimeType]: ext\n      }),\n      {}\n    );\n    return [\n      {\n        // description is required due to https://crbug.com/1264708\n        description: \"Files\",\n        accept: acceptForPicker\n      }\n    ];\n  }\n  return accept;\n}\nfunction acceptPropAsAcceptAttr(accept) {\n  if (isDefined(accept)) {\n    return Object.entries(accept).reduce((a, [mimeType, ext]) => [...a, mimeType, ...ext], []).filter((v) => isMIMEType(v) || isExt(v)).join(\",\");\n  }\n  return void 0;\n}\nfunction isAbort(v) {\n  return v instanceof DOMException && (v.name === \"AbortError\" || v.code === v.ABORT_ERR);\n}\nfunction isSecurityError(v) {\n  return v instanceof DOMException && (v.name === \"SecurityError\" || v.code === v.SECURITY_ERR);\n}\nfunction isMIMEType(v) {\n  return v === \"audio/*\" || v === \"video/*\" || v === \"image/*\" || v === \"text/*\" || /\\w+\\/[-+.\\w]+/g.test(v);\n}\nfunction isExt(v) {\n  return /^.*\\.[\\w]+$/.test(v);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVhY3QtZHJvcHpvbmUtZXNtL2Rpc3QvZXNtL3V0aWxzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXdDOztBQUV4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4RUFBOEUsNkRBQTZEO0FBQzNJO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMERBQTBELGtCQUFrQjtBQUM1RTtBQUNBO0FBQ0Esa0NBQWtDLGNBQWM7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxTQUFTLEVBQUUsaUNBQWlDO0FBQ2hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsU0FBUyxFQUFFLGlDQUFpQztBQUNqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlFQUFpRSw0REFBTztBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLFNBQVM7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixTQUFTO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLCtEQUErRDtBQUMvRDtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRW9jIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFudGluZS1taW5pbWFsLW5leHQtdGVtcGxhdGUvLi9ub2RlX21vZHVsZXMvcmVhY3QtZHJvcHpvbmUtZXNtL2Rpc3QvZXNtL3V0aWxzLm1qcz82ODI3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhY2NlcHRzIGZyb20gJy4vYXR0ci1hY2NlcHQubWpzJztcblxudmFyIF9fZGVmUHJvcCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBfX2RlZlByb3BzID0gT2JqZWN0LmRlZmluZVByb3BlcnRpZXM7XG52YXIgX19nZXRPd25Qcm9wRGVzY3MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycztcbnZhciBfX2dldE93blByb3BTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBfX2hhc093blByb3AgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIF9fcHJvcElzRW51bSA9IE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7XG52YXIgX19kZWZOb3JtYWxQcm9wID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4ga2V5IGluIG9iaiA/IF9fZGVmUHJvcChvYmosIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlLCB2YWx1ZSB9KSA6IG9ialtrZXldID0gdmFsdWU7XG52YXIgX19zcHJlYWRWYWx1ZXMgPSAoYSwgYikgPT4ge1xuICBmb3IgKHZhciBwcm9wIGluIGIgfHwgKGIgPSB7fSkpXG4gICAgaWYgKF9faGFzT3duUHJvcC5jYWxsKGIsIHByb3ApKVxuICAgICAgX19kZWZOb3JtYWxQcm9wKGEsIHByb3AsIGJbcHJvcF0pO1xuICBpZiAoX19nZXRPd25Qcm9wU3ltYm9scylcbiAgICBmb3IgKHZhciBwcm9wIG9mIF9fZ2V0T3duUHJvcFN5bWJvbHMoYikpIHtcbiAgICAgIGlmIChfX3Byb3BJc0VudW0uY2FsbChiLCBwcm9wKSlcbiAgICAgICAgX19kZWZOb3JtYWxQcm9wKGEsIHByb3AsIGJbcHJvcF0pO1xuICAgIH1cbiAgcmV0dXJuIGE7XG59O1xudmFyIF9fc3ByZWFkUHJvcHMgPSAoYSwgYikgPT4gX19kZWZQcm9wcyhhLCBfX2dldE93blByb3BEZXNjcyhiKSk7XG5jb25zdCBGSUxFX0lOVkFMSURfVFlQRSA9IFwiZmlsZS1pbnZhbGlkLXR5cGVcIjtcbmNvbnN0IEZJTEVfVE9PX0xBUkdFID0gXCJmaWxlLXRvby1sYXJnZVwiO1xuY29uc3QgRklMRV9UT09fU01BTEwgPSBcImZpbGUtdG9vLXNtYWxsXCI7XG5jb25zdCBUT09fTUFOWV9GSUxFUyA9IFwidG9vLW1hbnktZmlsZXNcIjtcbmNvbnN0IEVycm9yQ29kZSA9IHtcbiAgRmlsZUludmFsaWRUeXBlOiBGSUxFX0lOVkFMSURfVFlQRSxcbiAgRmlsZVRvb0xhcmdlOiBGSUxFX1RPT19MQVJHRSxcbiAgRmlsZVRvb1NtYWxsOiBGSUxFX1RPT19TTUFMTCxcbiAgVG9vTWFueUZpbGVzOiBUT09fTUFOWV9GSUxFU1xufTtcbmNvbnN0IGdldEludmFsaWRUeXBlUmVqZWN0aW9uRXJyID0gKGFjY2VwdCkgPT4ge1xuICBhY2NlcHQgPSBBcnJheS5pc0FycmF5KGFjY2VwdCkgJiYgYWNjZXB0Lmxlbmd0aCA9PT0gMSA/IGFjY2VwdFswXSA6IGFjY2VwdDtcbiAgY29uc3QgbWVzc2FnZVN1ZmZpeCA9IEFycmF5LmlzQXJyYXkoYWNjZXB0KSA/IGBvbmUgb2YgJHthY2NlcHQuam9pbihcIiwgXCIpfWAgOiBhY2NlcHQ7XG4gIHJldHVybiB7XG4gICAgY29kZTogRklMRV9JTlZBTElEX1RZUEUsXG4gICAgbWVzc2FnZTogYEZpbGUgdHlwZSBtdXN0IGJlICR7bWVzc2FnZVN1ZmZpeH1gXG4gIH07XG59O1xuY29uc3QgZ2V0VG9vTGFyZ2VSZWplY3Rpb25FcnIgPSAobWF4U2l6ZSkgPT4ge1xuICByZXR1cm4ge1xuICAgIGNvZGU6IEZJTEVfVE9PX0xBUkdFLFxuICAgIG1lc3NhZ2U6IGBGaWxlIGlzIGxhcmdlciB0aGFuICR7bWF4U2l6ZX0gJHttYXhTaXplID09PSAxID8gXCJieXRlXCIgOiBcImJ5dGVzXCJ9YFxuICB9O1xufTtcbmNvbnN0IGdldFRvb1NtYWxsUmVqZWN0aW9uRXJyID0gKG1pblNpemUpID0+IHtcbiAgcmV0dXJuIHtcbiAgICBjb2RlOiBGSUxFX1RPT19TTUFMTCxcbiAgICBtZXNzYWdlOiBgRmlsZSBpcyBzbWFsbGVyIHRoYW4gJHttaW5TaXplfSAke21pblNpemUgPT09IDEgPyBcImJ5dGVcIiA6IFwiYnl0ZXNcIn1gXG4gIH07XG59O1xuY29uc3QgVE9PX01BTllfRklMRVNfUkVKRUNUSU9OID0ge1xuICBjb2RlOiBUT09fTUFOWV9GSUxFUyxcbiAgbWVzc2FnZTogXCJUb28gbWFueSBmaWxlc1wiXG59O1xuZnVuY3Rpb24gZmlsZUFjY2VwdGVkKGZpbGUsIGFjY2VwdCkge1xuICBjb25zdCBpc0FjY2VwdGFibGUgPSBmaWxlLnR5cGUgPT09IFwiYXBwbGljYXRpb24veC1tb3otZmlsZVwiIHx8IGFjY2VwdHMoZmlsZSwgYWNjZXB0KTtcbiAgcmV0dXJuIFtcbiAgICBpc0FjY2VwdGFibGUsXG4gICAgaXNBY2NlcHRhYmxlID8gbnVsbCA6IGdldEludmFsaWRUeXBlUmVqZWN0aW9uRXJyKGFjY2VwdClcbiAgXTtcbn1cbmZ1bmN0aW9uIGZpbGVNYXRjaFNpemUoZmlsZSwgbWluU2l6ZSwgbWF4U2l6ZSkge1xuICBpZiAoaXNEZWZpbmVkKGZpbGUuc2l6ZSkpIHtcbiAgICBpZiAoaXNEZWZpbmVkKG1pblNpemUpICYmIGlzRGVmaW5lZChtYXhTaXplKSkge1xuICAgICAgaWYgKGZpbGUuc2l6ZSA+IG1heFNpemUpXG4gICAgICAgIHJldHVybiBbZmFsc2UsIGdldFRvb0xhcmdlUmVqZWN0aW9uRXJyKG1heFNpemUpXTtcbiAgICAgIGlmIChmaWxlLnNpemUgPCBtaW5TaXplKVxuICAgICAgICByZXR1cm4gW2ZhbHNlLCBnZXRUb29TbWFsbFJlamVjdGlvbkVycihtaW5TaXplKV07XG4gICAgfSBlbHNlIGlmIChpc0RlZmluZWQobWluU2l6ZSkgJiYgZmlsZS5zaXplIDwgbWluU2l6ZSlcbiAgICAgIHJldHVybiBbZmFsc2UsIGdldFRvb1NtYWxsUmVqZWN0aW9uRXJyKG1pblNpemUpXTtcbiAgICBlbHNlIGlmIChpc0RlZmluZWQobWF4U2l6ZSkgJiYgZmlsZS5zaXplID4gbWF4U2l6ZSlcbiAgICAgIHJldHVybiBbZmFsc2UsIGdldFRvb0xhcmdlUmVqZWN0aW9uRXJyKG1heFNpemUpXTtcbiAgfVxuICByZXR1cm4gW3RydWUsIG51bGxdO1xufVxuZnVuY3Rpb24gaXNEZWZpbmVkKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSAhPT0gdm9pZCAwICYmIHZhbHVlICE9PSBudWxsO1xufVxuZnVuY3Rpb24gYWxsRmlsZXNBY2NlcHRlZCh7XG4gIGZpbGVzLFxuICBhY2NlcHQsXG4gIG1pblNpemUsXG4gIG1heFNpemUsXG4gIG11bHRpcGxlLFxuICBtYXhGaWxlcyxcbiAgdmFsaWRhdG9yXG59KSB7XG4gIGlmICghbXVsdGlwbGUgJiYgZmlsZXMubGVuZ3RoID4gMSB8fCBtdWx0aXBsZSAmJiBtYXhGaWxlcyA+PSAxICYmIGZpbGVzLmxlbmd0aCA+IG1heEZpbGVzKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiBmaWxlcy5ldmVyeSgoZmlsZSkgPT4ge1xuICAgIGNvbnN0IFthY2NlcHRlZF0gPSBmaWxlQWNjZXB0ZWQoZmlsZSwgYWNjZXB0KTtcbiAgICBjb25zdCBbc2l6ZU1hdGNoXSA9IGZpbGVNYXRjaFNpemUoZmlsZSwgbWluU2l6ZSwgbWF4U2l6ZSk7XG4gICAgY29uc3QgY3VzdG9tRXJyb3JzID0gdmFsaWRhdG9yID8gdmFsaWRhdG9yKGZpbGUpIDogbnVsbDtcbiAgICByZXR1cm4gYWNjZXB0ZWQgJiYgc2l6ZU1hdGNoICYmICFjdXN0b21FcnJvcnM7XG4gIH0pO1xufVxuZnVuY3Rpb24gaXNQcm9wYWdhdGlvblN0b3BwZWQoZXZlbnQpIHtcbiAgaWYgKHR5cGVvZiBldmVudC5pc1Byb3BhZ2F0aW9uU3RvcHBlZCA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgcmV0dXJuIGV2ZW50LmlzUHJvcGFnYXRpb25TdG9wcGVkKCk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIGV2ZW50LmNhbmNlbEJ1YmJsZSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiBldmVudC5jYW5jZWxCdWJibGU7XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufVxuZnVuY3Rpb24gaXNFdnRXaXRoRmlsZXMoZXZlbnQpIHtcbiAgaWYgKCFldmVudC5kYXRhVHJhbnNmZXIpIHtcbiAgICByZXR1cm4gISFldmVudC50YXJnZXQgJiYgISFldmVudC50YXJnZXQuZmlsZXM7XG4gIH1cbiAgcmV0dXJuIEFycmF5LnByb3RvdHlwZS5zb21lLmNhbGwoXG4gICAgZXZlbnQuZGF0YVRyYW5zZmVyLnR5cGVzLFxuICAgICh0eXBlKSA9PiB0eXBlID09PSBcIkZpbGVzXCIgfHwgdHlwZSA9PT0gXCJhcHBsaWNhdGlvbi94LW1vei1maWxlXCJcbiAgKTtcbn1cbmZ1bmN0aW9uIG9uRG9jdW1lbnREcmFnT3ZlcihldmVudCkge1xuICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xufVxuZnVuY3Rpb24gaXNJZSh1c2VyQWdlbnQpIHtcbiAgcmV0dXJuIHVzZXJBZ2VudC5pbmRleE9mKFwiTVNJRVwiKSAhPT0gLTEgfHwgdXNlckFnZW50LmluZGV4T2YoXCJUcmlkZW50L1wiKSAhPT0gLTE7XG59XG5mdW5jdGlvbiBpc0VkZ2UodXNlckFnZW50KSB7XG4gIHJldHVybiB1c2VyQWdlbnQuaW5kZXhPZihcIkVkZ2UvXCIpICE9PSAtMTtcbn1cbmZ1bmN0aW9uIGlzSWVPckVkZ2UodXNlckFnZW50ID0gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQpIHtcbiAgcmV0dXJuIGlzSWUodXNlckFnZW50KSB8fCBpc0VkZ2UodXNlckFnZW50KTtcbn1cbmZ1bmN0aW9uIGNvbXBvc2VFdmVudEhhbmRsZXJzKC4uLmZucykge1xuICByZXR1cm4gKGV2ZW50LCAuLi5hcmdzKSA9PiBmbnMuc29tZSgoZm4pID0+IHtcbiAgICBpZiAoIWlzUHJvcGFnYXRpb25TdG9wcGVkKGV2ZW50KSAmJiBmbikge1xuICAgICAgZm4oZXZlbnQsIC4uLmFyZ3MpO1xuICAgIH1cbiAgICByZXR1cm4gaXNQcm9wYWdhdGlvblN0b3BwZWQoZXZlbnQpO1xuICB9KTtcbn1cbmZ1bmN0aW9uIGNhblVzZUZpbGVTeXN0ZW1BY2Nlc3NBUEkoKSB7XG4gIHJldHVybiBcInNob3dPcGVuRmlsZVBpY2tlclwiIGluIHdpbmRvdztcbn1cbmZ1bmN0aW9uIHBpY2tlck9wdGlvbnNGcm9tQWNjZXB0KGFjY2VwdCkge1xuICBpZiAoaXNEZWZpbmVkKGFjY2VwdCkpIHtcbiAgICBjb25zdCBhY2NlcHRGb3JQaWNrZXIgPSBPYmplY3QuZW50cmllcyhhY2NlcHQpLmZpbHRlcigoW21pbWVUeXBlLCBleHRdKSA9PiB7XG4gICAgICBsZXQgb2sgPSB0cnVlO1xuICAgICAgaWYgKCFpc01JTUVUeXBlKG1pbWVUeXBlKSkge1xuICAgICAgICBjb25zb2xlLndhcm4oXG4gICAgICAgICAgYFNraXBwZWQgXCIke21pbWVUeXBlfVwiIGJlY2F1c2UgaXQgaXMgbm90IGEgdmFsaWQgTUlNRSB0eXBlLiBDaGVjayBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9IVFRQL0Jhc2ljc19vZl9IVFRQL01JTUVfdHlwZXMvQ29tbW9uX3R5cGVzIGZvciBhIGxpc3Qgb2YgdmFsaWQgTUlNRSB0eXBlcy5gXG4gICAgICAgICk7XG4gICAgICAgIG9rID0gZmFsc2U7XG4gICAgICB9XG4gICAgICBpZiAoIUFycmF5LmlzQXJyYXkoZXh0KSB8fCAhZXh0LmV2ZXJ5KGlzRXh0KSkge1xuICAgICAgICBjb25zb2xlLndhcm4oXG4gICAgICAgICAgYFNraXBwZWQgXCIke21pbWVUeXBlfVwiIGJlY2F1c2UgYW4gaW52YWxpZCBmaWxlIGV4dGVuc2lvbiB3YXMgcHJvdmlkZWQuYFxuICAgICAgICApO1xuICAgICAgICBvayA9IGZhbHNlO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG9rO1xuICAgIH0pLnJlZHVjZShcbiAgICAgIChhZ2csIFttaW1lVHlwZSwgZXh0XSkgPT4gX19zcHJlYWRQcm9wcyhfX3NwcmVhZFZhbHVlcyh7fSwgYWdnKSwge1xuICAgICAgICBbbWltZVR5cGVdOiBleHRcbiAgICAgIH0pLFxuICAgICAge31cbiAgICApO1xuICAgIHJldHVybiBbXG4gICAgICB7XG4gICAgICAgIC8vIGRlc2NyaXB0aW9uIGlzIHJlcXVpcmVkIGR1ZSB0byBodHRwczovL2NyYnVnLmNvbS8xMjY0NzA4XG4gICAgICAgIGRlc2NyaXB0aW9uOiBcIkZpbGVzXCIsXG4gICAgICAgIGFjY2VwdDogYWNjZXB0Rm9yUGlja2VyXG4gICAgICB9XG4gICAgXTtcbiAgfVxuICByZXR1cm4gYWNjZXB0O1xufVxuZnVuY3Rpb24gYWNjZXB0UHJvcEFzQWNjZXB0QXR0cihhY2NlcHQpIHtcbiAgaWYgKGlzRGVmaW5lZChhY2NlcHQpKSB7XG4gICAgcmV0dXJuIE9iamVjdC5lbnRyaWVzKGFjY2VwdCkucmVkdWNlKChhLCBbbWltZVR5cGUsIGV4dF0pID0+IFsuLi5hLCBtaW1lVHlwZSwgLi4uZXh0XSwgW10pLmZpbHRlcigodikgPT4gaXNNSU1FVHlwZSh2KSB8fCBpc0V4dCh2KSkuam9pbihcIixcIik7XG4gIH1cbiAgcmV0dXJuIHZvaWQgMDtcbn1cbmZ1bmN0aW9uIGlzQWJvcnQodikge1xuICByZXR1cm4gdiBpbnN0YW5jZW9mIERPTUV4Y2VwdGlvbiAmJiAodi5uYW1lID09PSBcIkFib3J0RXJyb3JcIiB8fCB2LmNvZGUgPT09IHYuQUJPUlRfRVJSKTtcbn1cbmZ1bmN0aW9uIGlzU2VjdXJpdHlFcnJvcih2KSB7XG4gIHJldHVybiB2IGluc3RhbmNlb2YgRE9NRXhjZXB0aW9uICYmICh2Lm5hbWUgPT09IFwiU2VjdXJpdHlFcnJvclwiIHx8IHYuY29kZSA9PT0gdi5TRUNVUklUWV9FUlIpO1xufVxuZnVuY3Rpb24gaXNNSU1FVHlwZSh2KSB7XG4gIHJldHVybiB2ID09PSBcImF1ZGlvLypcIiB8fCB2ID09PSBcInZpZGVvLypcIiB8fCB2ID09PSBcImltYWdlLypcIiB8fCB2ID09PSBcInRleHQvKlwiIHx8IC9cXHcrXFwvWy0rLlxcd10rL2cudGVzdCh2KTtcbn1cbmZ1bmN0aW9uIGlzRXh0KHYpIHtcbiAgcmV0dXJuIC9eLipcXC5bXFx3XSskLy50ZXN0KHYpO1xufVxuXG5leHBvcnQgeyBFcnJvckNvZGUsIEZJTEVfSU5WQUxJRF9UWVBFLCBGSUxFX1RPT19MQVJHRSwgRklMRV9UT09fU01BTEwsIFRPT19NQU5ZX0ZJTEVTLCBUT09fTUFOWV9GSUxFU19SRUpFQ1RJT04sIGFjY2VwdFByb3BBc0FjY2VwdEF0dHIsIGFsbEZpbGVzQWNjZXB0ZWQsIGNhblVzZUZpbGVTeXN0ZW1BY2Nlc3NBUEksIGNvbXBvc2VFdmVudEhhbmRsZXJzLCBmaWxlQWNjZXB0ZWQsIGZpbGVNYXRjaFNpemUsIGdldEludmFsaWRUeXBlUmVqZWN0aW9uRXJyLCBnZXRUb29MYXJnZVJlamVjdGlvbkVyciwgZ2V0VG9vU21hbGxSZWplY3Rpb25FcnIsIGlzQWJvcnQsIGlzRXZ0V2l0aEZpbGVzLCBpc0V4dCwgaXNJZU9yRWRnZSwgaXNNSU1FVHlwZSwgaXNQcm9wYWdhdGlvblN0b3BwZWQsIGlzU2VjdXJpdHlFcnJvciwgb25Eb2N1bWVudERyYWdPdmVyLCBwaWNrZXJPcHRpb25zRnJvbUFjY2VwdCB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-dropzone-esm/dist/esm/utils.mjs\n");

/***/ })

};
;